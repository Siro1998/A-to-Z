/// <reference types="node" />
import type { RequestOptions } from 'https';
import type { TBodyMode, TRequestBody, TRequestQuery, TRequestStringQuery } from './request-maker.mixin';
export declare class RequestParamHelpers {
    static readonly JSON_1_1_ENDPOINTS: Set<string>;
    static formatQueryToString(query: TRequestQuery): TRequestStringQuery;
    static autoDetectBodyType(url: string): TBodyMode;
    static constructGetParams(query: TRequestQuery): string;
    static constructBodyParams(body: TRequestBody, headers: Record<string, string>, mode: TBodyMode): string | Buffer;
    static setBodyLengthHeader(options: RequestOptions, body: string | Buffer): void;
    static isOAuthSerializable(item: any): boolean;
    static mergeQueryAndBodyForOAuth(query: TRequestQuery, body: TRequestBody): any;
    static mergeUrlQueryIntoObject(url: string, query: TRequestQuery): string;
    static applyRequestParametersToUrl(url: string, parameters: TRequestQuery): string;
}
export default RequestParamHelpers;
